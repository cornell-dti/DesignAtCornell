{"version":3,"sources":["event-emitter/event-emitter.ts","event-emitter/constant-emitters.ts","side-nav/SideNav.tsx"],"names":["EventEmitter","subscribers","Set","subscriber","this","add","delete","event","Array","from","values","sub","Emitters","navOpenEmitter","SideNav","props","onNavOpen","setState","isNavOpen","state","subscribe","unsubscribe","as","Menu","animation","direction","icon","inverted","vertical","visible","width","to","Item","style","marginTop","name","React","Component"],"mappings":"sLAAaA,EAAb,iDAEUC,YAAsC,IAAIC,IAFpD,sDAIYC,GACRC,KAAKH,YAAYI,IAAIF,KALzB,kCAQcA,GACVC,KAAKH,YAAYK,OAAOH,KAT5B,2BAYOI,GAEH,IADA,IACA,MADWC,MAAMC,KAAKL,KAAKH,YAAYS,UACvC,eAAsB,EACpBC,EADU,MACNJ,QAfV,KCEaK,EAAb,kCAAaA,EAEJC,eAAwC,IAAIb,G,4ICW/Cc,E,kDAEJ,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAORC,UAAY,SAACT,GACX,EAAKU,SAAS,CACZC,UAAWX,KARb,EAAKY,MAAQ,CACXD,WAAW,GAEbN,IAASC,eAAeO,UAAU,EAAKJ,WALjB,E,mEAetBJ,IAASC,eAAeQ,YAAYjB,KAAKY,a,+BAIzC,OACE,kBAAC,IAAD,CACEM,GAAIC,IACJC,UAAU,UACVC,UAAU,OACVC,KAAK,UACLC,UAAQ,EACRC,UAAQ,EACRC,QAASzB,KAAKe,MAAMD,UACpBY,MAAM,QAEN,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAKC,KAAN,CAAWC,MAAO,CAAEC,UAAW,SAC7B,kBAAC,IAAD,CAAMC,KAAK,SADb,SAKF,kBAAC,IAAD,CAAMJ,GAAG,UACP,kBAAC,IAAKC,KAAN,KACE,kBAAC,IAAD,CAAMG,KAAK,SADb,e,GAvCYC,IAAMC,WAuDbvB","file":"static/js/8.617ae26c.chunk.js","sourcesContent":["export class EventEmitter<T> {\n\n  private subscribers: Set<(event: T) => any> = new Set();\n\n  subscribe(subscriber: (event: T) => any) {\n    this.subscribers.add(subscriber);\n  }\n\n  unsubscribe(subscriber: (event: T) => any) {\n    this.subscribers.delete(subscriber);\n  }\n\n  emit(event: T) {\n    let subs = Array.from(this.subscribers.values());\n    for (let sub of subs) {\n      sub(event);\n    }\n  }\n\n}","import { EventEmitter } from \"./event-emitter\";\n\nexport class Emitters {\n\n  static navOpenEmitter: EventEmitter<boolean> = new EventEmitter();\n\n}","import React from 'react';\nimport {\n  Icon,\n  Menu,\n  Sidebar,\n} from 'semantic-ui-react';\nimport {\n  Link\n} from 'react-router-dom';\nimport { Emitters } from '../event-emitter/constant-emitters';\n\ntype SideNavState = {\n  isNavOpen: boolean\n}\n\nclass SideNav extends React.Component<any, SideNavState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isNavOpen: false\n    }\n    Emitters.navOpenEmitter.subscribe(this.onNavOpen)\n  }\n\n  onNavOpen = (event: boolean) => {\n    this.setState({\n      isNavOpen: event\n    });\n  };\n\n  componentWillUnmount() {\n    Emitters.navOpenEmitter.unsubscribe(this.onNavOpen);\n  }\n\n  render() {\n    return (\n      <Sidebar\n        as={Menu}\n        animation=\"uncover\"\n        direction=\"left\"\n        icon='labeled'\n        inverted\n        vertical\n        visible={this.state.isNavOpen}\n        width='thin'\n      >\n        <Link to=\"/\">\n          <Menu.Item style={{ marginTop: '1rem' }}>\n            <Icon name='home' />\n          Home\n        </Menu.Item>\n        </Link>\n        <Link to=\"/about\">\n          <Menu.Item>\n            <Icon name='info' />\n        About\n      </Menu.Item>\n        </Link>\n        {/* <Link to=\"/contact\">\n          <Menu.Item>\n            <Icon name='mail' />\n        Contact Us\n      </Menu.Item>\n        </Link> */}\n      </Sidebar >\n    )\n  }\n}\n\nexport default SideNav;\n"],"sourceRoot":""}