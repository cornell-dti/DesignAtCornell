{"version":3,"sources":["event-emitter/event-emitter.ts","event-emitter/constant-emitters.ts","side-nav/SideNav.tsx"],"names":["EventEmitter","subscribers","Set","subscriber","this","add","delete","event","Array","from","values","sub","Emitters","navOpenEmitter","SideNav","props","state","isNavOpen","subscribe","setState","as","Menu","animation","direction","icon","inverted","vertical","visible","width","to","Item","name","React","Component"],"mappings":"sLAAaA,EAAb,iDAEUC,YAAsC,IAAIC,IAFpD,sDAIYC,GACRC,KAAKH,YAAYI,IAAIF,KALzB,kCAQcA,GACVC,KAAKH,YAAYK,OAAOH,KAT5B,2BAYOI,GAEH,IADA,IACA,MADWC,MAAMC,KAAKL,KAAKH,YAAYS,UACvC,eAAsB,EACpBC,EADU,MACNJ,QAfV,KCEaK,EAAb,kCAAaA,EAEJC,eAAwC,IAAIb,G,4ICW/Cc,E,kDAEJ,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACXC,WAAW,GAEbL,IAASC,eAAeK,WAAU,SAACX,GACjC,EAAKY,SAAS,CACZF,UAAWV,OAPO,E,qDAatB,OACE,kBAAC,IAAD,CACEa,GAAIC,IACJC,UAAU,UACVC,UAAU,OACVC,KAAK,UACLC,UAAQ,EACRC,UAAQ,EACRC,QAASvB,KAAKY,MAAMC,UACpBW,MAAM,QAEN,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAKC,KAAN,KACE,kBAAC,IAAD,CAAMC,KAAK,SADb,SAKF,kBAAC,IAAD,CAAMF,GAAG,UACP,kBAAC,IAAKC,KAAN,KACE,kBAAC,IAAD,CAAMC,KAAK,SADb,UAKF,kBAAC,IAAD,CAAMF,GAAG,YACP,kBAAC,IAAKC,KAAN,KACE,kBAAC,IAAD,CAAMC,KAAK,SADb,oB,GAvCYC,IAAMC,WAiDbnB","file":"static/js/8.d9501b2d.chunk.js","sourcesContent":["export class EventEmitter<T> {\n\n  private subscribers: Set<(event: T) => any> = new Set();\n\n  subscribe(subscriber: (event: T) => any) {\n    this.subscribers.add(subscriber);\n  }\n\n  unsubscribe(subscriber: (event: T) => any) {\n    this.subscribers.delete(subscriber);\n  }\n\n  emit(event: T) {\n    let subs = Array.from(this.subscribers.values());\n    for (let sub of subs) {\n      sub(event);\n    }\n  }\n\n}","import { EventEmitter } from \"./event-emitter\";\n\nexport class Emitters {\n\n  static navOpenEmitter: EventEmitter<boolean> = new EventEmitter();\n\n}","import React from 'react';\nimport {\n  Icon,\n  Menu,\n  Sidebar,\n} from 'semantic-ui-react';\nimport {\n  Link\n} from 'react-router-dom';\nimport { Emitters } from '../event-emitter/constant-emitters';\n\ntype SideNavState = {\n  isNavOpen: boolean\n}\n\nclass SideNav extends React.Component<any, SideNavState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isNavOpen: false\n    }\n    Emitters.navOpenEmitter.subscribe((event) => {\n      this.setState({\n        isNavOpen: event\n      });\n    })\n  }\n\n  render() {\n    return (\n      <Sidebar\n        as={Menu}\n        animation=\"uncover\"\n        direction=\"left\"\n        icon='labeled'\n        inverted\n        vertical\n        visible={this.state.isNavOpen}\n        width='thin'\n      >\n        <Link to=\"/\">\n          <Menu.Item>\n            <Icon name='home' />\n          Home\n        </Menu.Item>\n        </Link>\n        <Link to=\"/about\">\n          <Menu.Item>\n            <Icon name='info' />\n        About\n      </Menu.Item>\n        </Link>\n        <Link to=\"/contact\">\n          <Menu.Item>\n            <Icon name='mail' />\n        Contact Us\n      </Menu.Item>\n        </Link>\n      </Sidebar >\n    )\n  }\n}\n\nexport default SideNav;\n"],"sourceRoot":""}